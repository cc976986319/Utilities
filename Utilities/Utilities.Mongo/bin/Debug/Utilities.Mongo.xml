<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Utilities.Mongo</name>
    </assembly>
    <members>
        <member name="T:Utilities.Mongo.Attributes.CollectionAttribute">
            <summary>
            文档集名称特性
            </summary>
        </member>
        <member name="P:Utilities.Mongo.Attributes.CollectionAttribute.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Utilities.Mongo.Attributes.CollectionAttribute.Describe">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:Utilities.Mongo.Extensions.Microsoft.StringExtension">
            <summary>
            字符串扩展
            </summary>
        </member>
        <member name="M:Utilities.Mongo.Extensions.Microsoft.StringExtension.ReadingConnectionStrings(System.String)">
            <summary>
            获取ConnectionString
            </summary>
            <param name="name">名称</param>
            <returns></returns>
        </member>
        <member name="T:Utilities.Mongo.Extensions.Mongo.DocumentExtension">
            <summary>
            文档扩展
            </summary>
        </member>
        <member name="M:Utilities.Mongo.Extensions.Mongo.DocumentExtension.ToLocalDateTime(MongoDB.Bson.BsonDocument)">
            <summary>
            时间本地化
            </summary>
            <param name="document">文档</param>
            <returns></returns>
        </member>
        <member name="T:Utilities.Mongo.Extensions.Mongo.FieldExtension">
            <summary>
            字段扩展
            </summary>
        </member>
        <member name="M:Utilities.Mongo.Extensions.Mongo.FieldExtension.MarkUpdateDefinition``1(``0)">
            <summary>
            标识为修改
            </summary>
            <typeparam name="TDocument">文档：<see cref="!:&lt;TDocument&gt;"/>必须继承于<see cref="!:&lt;EntityModel&gt;"/></typeparam>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="T:Utilities.Mongo.Models.EntityModel">
            <summary>
            Mongo实体(基实体)
            </summary>
        </member>
        <member name="M:Utilities.Mongo.Models.EntityModel.#ctor">
            <summary>
            实例化
            </summary>
        </member>
        <member name="P:Utilities.Mongo.Models.EntityModel._id">
            <summary>
            编号(数据编号)
            </summary>
        </member>
        <member name="M:Utilities.Mongo.Models.EntityModel.GetCollectionName``1">
            <summary>
            获取数据集名称
            </summary>
            <returns></returns>
        </member>
        <member name="T:Utilities.Mongo.Models.ReduceResult`1">
            <summary>
            MapReduce实体
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="P:Utilities.Mongo.Models.ReduceResult`1._id">
            <summary>
            编号（Key）
            </summary>
        </member>
        <member name="P:Utilities.Mongo.Models.ReduceResult`1.value">
            <summary>
            结果
            </summary>
        </member>
        <member name="T:Utilities.Mongo.MongoContext">
            <summary>
            数据库实例
            </summary>   
        </member>
        <member name="M:Utilities.Mongo.MongoContext.#ctor(System.String)">
            <summary>
            实例化
            </summary>
            <param name="connectionName">数据库连接名</param>
        </member>
        <member name="P:Utilities.Mongo.MongoContext.ConnectionString">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="P:Utilities.Mongo.MongoContext.MongoClient">
            <summary>
            
            </summary>
        </member>
        <member name="P:Utilities.Mongo.MongoContext.MongoUrl">
            <summary>
            Mongo访问路径
            </summary>
        </member>
        <member name="P:Utilities.Mongo.MongoContext.MongoDatabase">
            <summary>
            数据库
            </summary>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.Add``1(``0)">
            <summary>
            添加一条数据
            </summary>
            <param name="entity">要添加的数据</param>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.AddRange``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加多条数据
            </summary>
            <param name="entitys">要添加的数据集</param>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.AddAsync``1(``0)">
            <summary>
            添加一条数据(异步)
            </summary>
            <param name="entity">要添加的数据</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.AddRangeAsync``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加多条数据(异步)
            </summary>
            <param name="entitys">要添加的数据集</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.Update``1(``0)">
            <summary>
            修改数据(单条)(根据编号:_id)
            </summary>
            <typeparam name="TEntity">文档类型</typeparam>
            <param name="entity">新的文档值</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.Update``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0)">
            <summary>
            修改数据(单条)
            </summary>
            <typeparam name="TEntity">文档类型</typeparam>
            <param name="filter">修改条件</param>
            <param name="entity">新的文档值</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.UpdateAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0)">
            <summary>
            修改数据(单条)
            </summary>
            <typeparam name="TEntity">文档类型</typeparam>
            <param name="filter">修改条件</param>
            <param name="entity">新的文档值</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.UpdateMany``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0)">
            <summary>
            修改数据(多条)
            </summary>
            <typeparam name="TEntity">文档类型</typeparam>
            <param name="filter">修改条件</param>
            <param name="entity">新的文档值</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.UpdateManyAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0)">
            <summary>
            修改数据(多条)
            </summary>
            <typeparam name="TEntity">文档类型</typeparam>
            <param name="filter">修改条件</param>
            <param name="entity">新的文档值</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.DeleteOne``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            删除一条数据
            </summary>
            <param name="filter">删除条件</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.DeleteOneAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            删除一条数据(异步)
            </summary>
            <param name="filter">删除条件</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.DeleteOne``1(``0)">
            <summary>
            删除一条数据
            </summary>
            <param name="entity">要删除的数据</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.DeleteOneAsync``1(``0)">
            <summary>
            删除一条数据(异步)
            </summary>
            <param name="entity">要删除的数据</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.DeleteRange``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            删除指定条件的数据
            </summary>
            <param name="filter">删除条件</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.DeleteRangeAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            删除指定条件的数据
            </summary>
            <param name="filter">删除条件</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.Replace``1(``0)">
            <summary>
            替换数据
            </summary>
            <param name="entity">要替换的数据</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.ReplaceAsync``1(``0)">
            <summary>
            替换数据(异步)
            </summary>
            <param name="entity">要替换的数据</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.Find``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            查询
            </summary>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.FindAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            查询(异步)
            </summary>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.AsQueryable``1">
            <summary>
            查询(lambda)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.GetCollection(System.String)">
            <summary>
            获取数据集
            </summary>
            <param name="collectionName">数据集名称</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.GetCollection``1">
            <summary>
            获取数据集
            </summary>
            <typeparam name="TEntity">数据集类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.MapReduce``2(System.String,System.String,MongoDB.Driver.MapReduceOptions{``0,Utilities.Mongo.Models.ReduceResult{``1}})">
            <summary>
            MapReduce(原始)
            </summary>
            <typeparam name="TEntity">数据集类型</typeparam>
            <typeparam name="TResult">返回结果</typeparam>
            <param name="map">Map语句</param>
            <param name="reduce">Reduce语句</param>
            <param name="options">选项配置</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.Mongo.MongoContext.MapReduceAsync``2(System.String,System.String,MongoDB.Driver.MapReduceOptions{``0,Utilities.Mongo.Models.ReduceResult{``1}})">
            <summary>
            MapReduce(原始)
            </summary>
            <typeparam name="TEntity">数据集类型</typeparam>
            <typeparam name="TResult">返回结果</typeparam>
            <param name="map">Map语句</param>
            <param name="reduce">Reduce语句</param>
            <param name="options">选项配置</param>
            <returns></returns>
        </member>
    </members>
</doc>
